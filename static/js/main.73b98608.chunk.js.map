{"version":3,"sources":["components/PlanetContext.js","components/Filtros.js","components/Tabelas.jsx","components/Table.jsx","services/ServiceApi.js","services/sortLines.js","components/RadioButton.js","components/FuncAuxiliares.js","components/FiltrosFeitos.js","components/DropDown.js","components/Header.jsx","App.js","index.js"],"names":["PlanetContext","createContext","PlanetProvider","children","useState","planets","setPlanets","headers","setHeaders","column","setColumn","comparison","setComparison","value","setValue","sort","setSort","sortColumn","setSortColumn","addFilter","setAddFilter","loading","filterByName","name","filterByNumericValues","order","filtros","setFiltros","context","deletFilter","filter","old","filtro","index","SortButton","newsort","newcolumn","addValues","newcomparison","newvalue","inputText","event","Provider","sortData","data","filterColumn","toLowerCase","isNaN","a","b","reverse","Tabela","props","planet","key","data-testid","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","Table","useContext","results","dataPlanets","includes","length","reduce","acc","Number","allFilters","className","e","map","i","Tabelas","getPlanets","fetch","then","json","sortlines","RadioButton","onChange","target","style","width","htmlFor","type","onClick","class","selectedColumn","values","filtrados","filtrosOptions","filtrosFeitos","DropDown","id","placeholder","aria-describedby","Header","useEffect","Object","keys","App","ReactDOM","render","document","getElementById"],"mappings":"gTAGMA,EAAgBC,0BAEhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBAChCC,EADgC,KACvBC,EADuB,OAETF,mBAAS,IAFA,mBAEhCG,EAFgC,KAEvBC,EAFuB,OAGXJ,qBAHW,mBAGhCK,EAHgC,KAGxBC,EAHwB,OAIHN,qBAJG,mBAIhCO,EAJgC,KAIpBC,EAJoB,OAKbR,qBALa,mBAKhCS,EALgC,KAKzBC,EALyB,OAMfV,qBANe,mBAMhCW,EANgC,KAM1BC,EAN0B,OAOHZ,qBAPG,mBAOhCa,EAPgC,KAOpBC,EAPoB,OAQLd,mBAAS,CACzCK,OAAQ,GACRE,WAAY,GACZE,MAAO,KAX8B,mBAQhCM,EARgC,KAQrBC,EARqB,OAcThB,mBAAS,CACrCiB,SAAS,EACTC,aAAc,CAAEC,KAAM,IACtBC,sBAAuB,GACvBC,MAAO,CACLhB,OAAQ,OACRM,KAAM,SApB6B,mBAchCW,EAdgC,KAcvBC,EAduB,KAuDjCC,EAAU,CACdC,YARkB,SAACC,GACnBH,GAAW,SAACI,GAAD,mBAAC,eACPA,GADM,IAETP,sBAAuBO,EAAIP,sBAAsBM,QAAO,SAACE,EAAQC,GAAT,OAAmBA,IAAUH,WAMvFI,WAvBiB,SAACC,EAASC,GAC3BT,GAAW,SAACI,GAAD,mBAAC,eACPA,GADM,IAETN,MAAO,CAAEhB,OAAQ2B,EAAWrB,KAAMoB,SAqBpChB,YACAkB,UAnCgB,SAACD,EAAWE,EAAeC,GAC3CZ,GAAW,SAACI,GAAD,mBAAC,eACPA,GADM,IAETP,sBAAsB,GAAD,mBAChBO,EAAIP,uBADY,CAEnB,CAAEf,OAAQ2B,EAAWzB,WAAY2B,EAAezB,MAAO0B,WA+B3D9B,SACAE,aACAe,UACAnB,UACAiC,UAvBgB,SAACC,GACjBd,GAAW,SAACI,GAAD,mBAAC,eACPA,GADM,IAETT,aAAc,CAAEC,KAAMkB,SAqBxBpC,UACAe,eACAV,YACAE,gBACAe,aACAnB,aACAF,aACAU,UACAE,gBACAJ,WACAC,OACAE,aACAJ,SAEF,OAAO,kBAACb,EAAc0C,SAAf,CAAwB7B,MAAOe,GAAUzB,ICzEnCwC,EAXE,SAACC,EAAM7B,EAAMN,GAC5B,IAAMoC,EAAepC,EAAOqC,cAO5B,OANIC,MAAMH,EAAK,GAAGC,IAChBD,EAAK7B,MAAK,SAACiC,EAAGC,GAAJ,OAAWD,EAAEH,GAAgBI,EAAEJ,GAAgB,GAAK,KAE9DD,EAAK7B,MAAK,SAACiC,EAAGC,GAAJ,OAAUD,EAAEH,GAAgBI,EAAEJ,MAE7B,SAAT9B,GAAiB6B,EAAKM,UACnBN,GCkCMO,MAvCf,SAAgBC,GAAQ,IACdC,EAAWD,EAAXC,OACR,OACE,wBAAIC,IAAKD,EAAO9B,MACd,wBAAIgC,cAAY,eAAeF,EAAO9B,MACtC,4BAAK8B,EAAOG,iBACZ,4BAAKH,EAAOI,gBACZ,4BAAKJ,EAAOK,UACZ,4BAAKL,EAAOM,SACZ,4BAAKN,EAAOO,SACZ,4BAAKP,EAAOQ,SACZ,4BAAKR,EAAOS,eACZ,4BAAKT,EAAOU,YACZ,4BAAKV,EAAOW,OACZ,4BAAKX,EAAOY,SACZ,4BAAKZ,EAAOa,QACZ,4BAAKb,EAAOc,OCkCHC,MAhDf,WAAkB,IAAD,EACuBC,qBAAWrE,GAAzCK,EADO,EACPA,QAASE,EADF,EACEA,QAASmB,EADX,EACWA,QAqB1B,GAAIA,EAAQL,QAAS,OAAO,0DAC5B,IAAIiD,EArBe,SAACC,GAClB,IAAMD,EAAUC,EAAYzC,QAAO,SAACuB,GAAD,OAAYA,EAAO9B,KAAKiD,SAAS9C,EAAQJ,aAAaC,SACzF,OAA6C,IAAzCG,EAAQF,sBAAsBiD,OAAqBH,EAChD5C,EAAQF,sBAAsBkD,QAAO,SAACC,EAAK3C,GAAY,IACpDvB,EAA8BuB,EAA9BvB,OAAQE,EAAsBqB,EAAtBrB,WAAYE,EAAUmB,EAAVnB,MAC5B,OAAO8D,EAAI7C,QAAO,SAACuB,GACjB,OAAQ1C,GACN,IAAK,YACH,OAAOiE,OAAOvB,EAAO5C,IAAWmE,OAAO/D,GACzC,IAAK,YACH,OAAO+D,OAAOvB,EAAO5C,IAAWmE,OAAO/D,GACzC,IAAK,UACH,OAAO+D,OAAOvB,EAAO5C,MAAamE,OAAO/D,GAC3C,QACE,OAAO,QAGZyD,GAISO,CAAWxE,GAGzB,OAFAiE,EAAU3B,EAAS2B,EAAS5C,EAAQD,MAAMV,KAAMW,EAAQD,MAAMhB,QAG5D,6BACE,2BAAOqE,UAAU,oBACf,+BACE,4BACGvE,EACEuB,QAAO,SAACiD,GAAD,MAAa,cAANA,KACdC,KAAI,SAACD,EAAGE,GAAJ,OACH,wBAAI3B,IAAG,UAAK2B,EAAI,IAAMF,QAI9B,+BACGT,EAAQU,KAAI,SAAC3B,EAAQ4B,GAAT,OACX,kBAACC,EAAD,CAAS5B,IAAKD,EAAO9B,KAAM8B,OAAQA,EAAQ4B,EAAGA,WCvC3CE,MAJf,WACE,OAAOC,MAHO,kCAGQC,MAAK,SAACzC,GAAD,OAAUA,EAAK0C,WCa7BC,EAhBG,CAChB,OACA,kBACA,iBACA,WACA,UACA,UACA,UACA,gBACA,aACA,QACA,UACA,SACA,OC4CaC,EArDK,WAAO,IAAD,EACyCnB,qBAAWrE,GAApEkC,EADgB,EAChBA,WAAYlB,EADI,EACJA,QAASD,EADL,EACKA,KAAMG,EADX,EACWA,cAAeD,EAD1B,EAC0BA,WAElD,OACE,yBAAK6D,UAAU,oBACb,4BACEW,SAAU,SAAChD,GAAD,OAAWvB,EAAcuB,EAAMiD,OAAO7E,QAChDiE,UAAU,+BACVa,MAAO,CAAEC,MAAO,SAChBrC,cAAY,eAEXgC,EAAUP,KAAI,SAACD,GAAD,OACb,4BAAQzB,IAAKyB,EAAGlE,MAAOkE,GACpBA,OAIP,yBAAKD,UAAU,gCACb,2BAAOA,UAAU,mBAAmBe,QAAQ,OAC1C,2BACEf,UAAU,mBACVW,SAAU,kBAAMzE,EAAQ,QACxB8E,KAAK,QACLvE,KAAK,QACLgC,cAAY,wBACZ1C,MAAM,QAPV,OAWA,2BAAOiE,UAAU,mBAAmBe,QAAQ,QAC1C,2BACEJ,SAAU,kBAAMzE,EAAQ,SACxB8E,KAAK,QACLhB,UAAU,mBACVvD,KAAK,QACLgC,cAAY,yBACZ1C,MAAM,SAPV,SAYF,4BACEkF,QAAS,kBAAM7D,EAAWnB,EAAME,IAChCsC,cAAY,qBACZuC,KAAK,SACLE,MAAM,0BAJR,UCdSC,EApBQ,SAACvE,EAAShB,GAC/B,IAAMwF,EAVe,SAACxE,GACtB,IAAMwE,EAAS,CAAC,aAAc,iBAAkB,WAAY,kBAAmB,iBAC/E,GAAIxE,EAAQF,sBAAsBiD,OAAS,EAAG,CAC5C,IAAM0B,EAAYzE,EAAQF,sBAAsBwD,KAAI,SAACD,GAAD,OAAOA,EAAEtE,UAC7D,OAAOyF,EAAOpE,QAAO,SAACiD,GAAD,OAAQoB,EAAU3B,SAASO,MAElD,OAAOmB,EAIQE,CAAe1E,GAC9B,OACE,4BACE+D,SAAU,SAACV,GAAD,OAAOrE,EAAUqE,EAAEW,OAAO7E,QACpC0C,cAAY,gBACZoC,MAAO,CAAEC,MAAO,SAChBd,UAAU,+BACVvD,KAAK,4BAEL,4BAAQV,MAAM,IAAd,MACCqF,EAAOlB,KAAI,SAACD,GAAD,OACV,4BAAQzB,IAAKyB,EAAGlE,MAAOkE,GACpBA,QCRIsB,EAdO,SAAC3E,EAASG,GAC9B,OAAIH,EAAQF,sBAAsBiD,OAAS,EAClC/C,EAAQF,sBAAsBwD,KAAI,SAACD,EAAG9C,GAAJ,OACvC,0BAAMqB,IAAKyB,EAAEtE,OAAQ8C,cAAY,UAC/B,2BAAIwB,EAAEtE,QACN,4BAAQsF,QAAS,kBAAMlE,EAAYI,IAAQ6D,KAAK,SAASxC,IAAKyB,EAAEtE,QAAhE,SAMC,MCuDM6F,EA9DE,WAAO,IAAD,EAWjBjC,qBAAWrE,GATbS,EAFmB,EAEnBA,OACAE,EAHmB,EAGnBA,WACAE,EAJmB,EAInBA,MACAH,EALmB,EAKnBA,UACAE,EANmB,EAMnBA,cACAE,EAPmB,EAOnBA,SACAY,EARmB,EAQnBA,QACAW,EATmB,EASnBA,UACAR,EAVmB,EAUnBA,YAGF,OACE,6BACE,0BAAMiD,UAAU,mBACd,yBAAKA,UAAU,qBACZmB,EAAevE,EAAShB,GACzB,4BACE+E,SAAU,SAACV,GAAD,OAAOnE,EAAcmE,EAAEW,OAAO7E,QACxC0C,cAAY,oBACZuB,UAAU,+BACVa,MAAO,CAAEC,MAAO,SAChBrE,KAAK,4BAEL,4BAAQV,MAAM,IAAd,MACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,YAEF,yBAAK8E,MAAO,CAAEC,MAAO,SAAWI,MAAM,mCACpC,yBAAKA,MAAM,uBACT,0BAAMA,MAAM,mBAAmBO,GAAG,gBAAlC,WAIF,2BACET,KAAK,SACLE,MAAM,eACNQ,YAAY,sBACZC,mBAAiB,eACjBhB,SAAU,SAACV,GAAD,OAAOjE,EAASiE,EAAEW,OAAO7E,WAGvC,6BACE,4BACEkF,QAAS,kBAAM1D,EAAU5B,EAAQE,EAAYE,IAC7CiF,KAAK,SACLvC,cAAY,gBACZuB,UAAU,sBAJZ,YAUJ,kBAAC,EAAD,OAEDuB,EAAc3E,EAASG,KCvBf6E,MAnCf,WAAmB,IAAD,EACmDrC,qBAAWrE,GAAtEM,EADQ,EACRA,WAAYE,EADJ,EACIA,WAAYkB,EADhB,EACgBA,QAASc,EADzB,EACyBA,UAAWb,EADpC,EACoCA,WAUpD,OARAgF,qBAAU,WACRxB,IAAaE,MAAK,SAACzC,GACjBtC,EAAWsC,EAAK0B,SAChB9D,EAAWoG,OAAOC,KAAKjE,EAAK0B,QAAQ,KACpC3C,GAAW,SAACoD,GAAD,mBAAC,eAAYA,GAAb,IAAgB1D,SAAS,YAErC,IAGD,6BACE,yBAAKyD,UAAU,oBACb,yBAAKa,MAAO,CAAEC,MAAO,SAAWI,MAAM,mCACpC,yBAAKA,MAAM,uBACT,0BAAMA,MAAM,mBAAmBO,GAAG,gBAAlC,WAIF,2BACEhD,cAAY,cACZ1C,MAAOa,EAAQJ,aAAaC,KAC5BuE,KAAK,OACLE,MAAM,eACNQ,YAAY,oBACZf,SAAU,SAACV,GAAD,OAAOvC,EAAUuC,EAAEW,OAAO7E,YAI1C,kBAAC,EAAD,QClBSiG,MAXf,WACE,OACE,kBAAC,EAAD,KACE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,S,MCNRiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.73b98608.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { createContext, useState } from 'react';\n\nconst PlanetContext = createContext();\n\nconst PlanetProvider = ({ children }) => {\n  const [planets, setPlanets] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [column, setColumn] = useState();\n  const [comparison, setComparison] = useState();\n  const [value, setValue] = useState();\n  const [sort, setSort] = useState();\n  const [sortColumn, setSortColumn] = useState();\n  const [addFilter, setAddFilter] = useState({\n    column: '',\n    comparison: '',\n    value: '',\n  });\n\n  const [filtros, setFiltros] = useState({\n    loading: true,\n    filterByName: { name: '' },\n    filterByNumericValues: [],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n\n  const addValues = (newcolumn, newcomparison, newvalue) => {\n    setFiltros((old) => ({\n      ...old,\n      filterByNumericValues: [\n        ...old.filterByNumericValues,\n        { column: newcolumn, comparison: newcomparison, value: newvalue },\n      ],\n    }));\n  };\n\n  const SortButton = (newsort, newcolumn) => {\n    setFiltros((old) => ({\n      ...old,\n      order: { column: newcolumn, sort: newsort },\n    }));\n  };\n\n  const inputText = (event) => {\n    setFiltros((old) => ({\n      ...old,\n      filterByName: { name: event },\n    }));\n  };\n\n  const deletFilter = (filter) => {\n    setFiltros((old) => ({\n      ...old,\n      filterByNumericValues: old.filterByNumericValues.filter((filtro, index) => index !== filter),\n    }));\n  };\n\n  const context = {\n    deletFilter,\n    SortButton,\n    addFilter,\n    addValues,\n    column,\n    comparison,\n    filtros,\n    headers,\n    inputText,\n    planets,\n    setAddFilter,\n    setColumn,\n    setComparison,\n    setFiltros,\n    setHeaders,\n    setPlanets,\n    setSort,\n    setSortColumn,\n    setValue,\n    sort,\n    sortColumn,\n    value,\n  };\n  return <PlanetContext.Provider value={context}>{children}</PlanetContext.Provider>;\n};\n\nPlanetProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport { PlanetProvider, PlanetContext };\n","const sortData = (data, sort, column) => {\n  const filterColumn = column.toLowerCase();\n  if (isNaN(data[0][filterColumn])) {\n    data.sort((a, b) => (a[filterColumn] > b[filterColumn] ? 1 : -1));\n  } else {\n    data.sort((a, b) => a[filterColumn] - b[filterColumn]);\n  }\n  if (sort === 'DESC') data.reverse();\n  return data;\n};\n\nexport default sortData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction Tabela(props) {\n  const { planet } = props;\n  return (\n    <tr key={planet.name}>\n      <td data-testid=\"planet-name\">{planet.name}</td>\n      <td>{planet.rotation_period}</td>\n      <td>{planet.orbital_period}</td>\n      <td>{planet.diameter}</td>\n      <td>{planet.climate}</td>\n      <td>{planet.gravity}</td>\n      <td>{planet.terrain}</td>\n      <td>{planet.surface_water}</td>\n      <td>{planet.population}</td>\n      <td>{planet.films}</td>\n      <td>{planet.created}</td>\n      <td>{planet.edited}</td>\n      <td>{planet.url}</td>\n    </tr>\n  );\n}\n\nTabela.propTypes = {\n  planet: PropTypes.shape({\n    climate: PropTypes.string,\n    created: PropTypes.string,\n    diameter: PropTypes.string,\n    edited: PropTypes.string,\n    films: PropTypes.array,\n    gravity: PropTypes.string,\n    name: PropTypes.string,\n    orbital_period: PropTypes.string,\n    population: PropTypes.string,\n    rotation_period: PropTypes.string,\n    surface_water: PropTypes.string,\n    terrain: PropTypes.string,\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Tabela;\n","import React, { useContext } from 'react';\nimport { PlanetContext } from './PlanetContext';\nimport sortData from './Filtros';\nimport Tabelas from './Tabelas';\n\nfunction Table() {\n  const { planets, headers, filtros } = useContext(PlanetContext);\n  const allFilters = (dataPlanets) => {\n    const results = dataPlanets.filter((planet) => planet.name.includes(filtros.filterByName.name));\n    if (filtros.filterByNumericValues.length === 0) return results;\n    return filtros.filterByNumericValues.reduce((acc, filtro) => {\n      const { column, comparison, value } = filtro;\n      return acc.filter((planet) => {\n        switch (comparison) {\n          case 'maior que':\n            return Number(planet[column]) > Number(value);\n          case 'menor que':\n            return Number(planet[column]) < Number(value);\n          case 'igual a':\n            return Number(planet[column]) === Number(value);\n          default:\n            return false;\n        }\n      });\n    }, results);\n  };\n\n  if (filtros.loading) return <span>L O A D I N G . . . . . </span>;\n  let results = allFilters(planets);\n  results = sortData(results, filtros.order.sort, filtros.order.column);\n\n  return (\n    <div>\n      <table className=\"table table-dark\">\n        <thead>\n          <tr>\n            {headers\n              .filter((e) => e !== 'residents')\n              .map((e, i) => (\n                <th key={`${i + 1}`}>{e}</th>\n              ))}\n          </tr>\n        </thead>\n        <tbody>\n          {results.map((planet, i) => (\n            <Tabelas key={planet.name} planet={planet} i={i} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","const API_URL = 'https://swapi.dev/api/planets/';\n\nfunction getPlanets() {\n  return fetch(API_URL).then((data) => data.json());\n}\n\nexport default getPlanets;\n","const sortlines = [\n  'name',\n  'rotation_period',\n  'orbital_period',\n  'diameter',\n  'climate',\n  'gravity',\n  'terrain',\n  'surface_water',\n  'population',\n  'films',\n  'created',\n  'edited',\n  'url',\n];\n\nexport default sortlines;\n","import React, { useContext } from 'react';\nimport { PlanetContext } from './PlanetContext';\nimport sortlines from '../services/sortLines';\n\nconst RadioButton = () => {\n  const { SortButton, setSort, sort, setSortColumn, sortColumn } = useContext(PlanetContext);\n\n  return (\n    <div className=\"container d-flex\">\n      <select\n        onChange={(event) => setSortColumn(event.target.value)}\n        className=\"form-control form-control-sm\"\n        style={{ width: '150px' }}\n        data-testid=\"column-sort\"\n      >\n        {sortlines.map((e) => (\n          <option key={e} value={e}>\n            {e}\n          </option>\n        ))}\n      </select>\n      <div className=\"form-check form-check-inline\">\n        <label className=\"form-check-label\" htmlFor=\"ASC\">\n          <input\n            className=\"form-check-input\"\n            onChange={() => setSort('ASC')}\n            type=\"radio\"\n            name=\"radio\"\n            data-testid=\"column-sort-input-asc\"\n            value=\"ASC\"\n          />\n          ASC\n        </label>\n        <label className=\"form-check-label\" htmlFor=\"DESC\">\n          <input\n            onChange={() => setSort('DESC')}\n            type=\"radio\"\n            className=\"form-check-input\"\n            name=\"radio\"\n            data-testid=\"column-sort-input-desc\"\n            value=\"DESC\"\n          />\n          DESC\n        </label>\n      </div>\n      <button\n        onClick={() => SortButton(sort, sortColumn)}\n        data-testid=\"column-sort-button\"\n        type=\"button\"\n        class=\"btn btn-primary btn-sm\"\n      >\n        Sort\n      </button>\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import React from 'react';\n\nconst filtrosOptions = (filtros) => {\n  const values = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  if (filtros.filterByNumericValues.length > 0) {\n    const filtrados = filtros.filterByNumericValues.map((e) => e.column);\n    return values.filter((e) => !filtrados.includes(e));\n  }\n  return values;\n};\n\nconst selectedColumn = (filtros, setColumn) => {\n  const values = filtrosOptions(filtros);\n  return (\n    <select\n      onChange={(e) => setColumn(e.target.value)}\n      data-testid=\"column-filter\"\n      style={{ width: '150px' }}\n      className=\"form-control form-control-sm\"\n      name=\"dropdown-filter-category\"\n    >\n      <option value=\"\">--</option>\n      {values.map((e) => (\n        <option key={e} value={e}>\n          {e}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default selectedColumn;\n","import React from 'react';\n\nconst filtrosFeitos = (filtros, deletFilter) => {\n  if (filtros.filterByNumericValues.length > 0) {\n    return filtros.filterByNumericValues.map((e, index) => (\n      <span key={e.column} data-testid=\"filter\">\n        <p>{e.column}</p>\n        <button onClick={() => deletFilter(index)} type=\"button\" key={e.column}>\n          X\n        </button>\n      </span>\n    ));\n  }\n  return null;\n};\n\nexport default filtrosFeitos;\n","import React, { useContext } from 'react';\nimport RadioButton from './RadioButton';\nimport { PlanetContext } from './PlanetContext';\nimport selectedColumn from './FuncAuxiliares';\nimport filtrosFeitos from './FiltrosFeitos';\n\nconst DropDown = () => {\n  const {\n    column,\n    comparison,\n    value,\n    setColumn,\n    setComparison,\n    setValue,\n    filtros,\n    addValues,\n    deletFilter,\n  } = useContext(PlanetContext);\n\n  return (\n    <div>\n      <form className=\" container mb-5\">\n        <div className=\" container d-flex\">\n          {selectedColumn(filtros, setColumn)}\n          <select\n            onChange={(e) => setComparison(e.target.value)}\n            data-testid=\"comparison-filter\"\n            className=\"form-control form-control-sm\"\n            style={{ width: '150px' }}\n            name=\"dropdown-quantity-filter\"\n          >\n            <option value=\"\">--</option>\n            <option value=\"maior que\">maior que</option>\n            <option value=\"menor que\">menor que</option>\n            <option value=\"igual a\">igual a</option>\n          </select>\n          <div style={{ width: '250px' }} class=\"input-group input-group-sm mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">\n                Search\n              </span>\n            </div>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              placeholder=\"Digite um número\"\n              aria-describedby=\"basic-addon1\"\n              onChange={(e) => setValue(e.target.value)}\n            />\n          </div>\n          <div>\n            <button\n              onClick={() => addValues(column, comparison, value)}\n              type=\"button\"\n              data-testid=\"button-filter\"\n              className=\"btn-primary btn-sm\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n        <RadioButton />\n      </form>\n      {filtrosFeitos(filtros, deletFilter)}\n    </div>\n  );\n};\n\nexport default DropDown;\n","import React, { useContext, useEffect } from 'react';\nimport getPlanets from '../services/ServiceApi';\nimport { PlanetContext } from './PlanetContext';\nimport DropDown from './DropDown';\n\nfunction Header() {\n  const { setPlanets, setHeaders, filtros, inputText, setFiltros } = useContext(PlanetContext);\n\n  useEffect(() => {\n    getPlanets().then((data) => {\n      setPlanets(data.results);\n      setHeaders(Object.keys(data.results[0]));\n      setFiltros((e) => ({ ...e, loading: false }));\n    });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container m-auto\">\n        <div style={{ width: '250px' }} class=\"input-group input-group-sm mb-3\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\" id=\"basic-addon1\">\n              Search\n            </span>\n          </div>\n          <input\n            data-testid=\"name-filter\"\n            value={filtros.filterByName.name}\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Termo de pesquisa\"\n            onChange={(e) => inputText(e.target.value)}\n          />\n        </div>\n      </div>\n      <DropDown />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport { PlanetProvider } from './components/PlanetContext';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <PlanetProvider>\n      <div className=\"App\">\n        <Header />\n        <Table />\n      </div>\n    </PlanetProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}